openapi: 3.1.0

info:
  title: Energy Performance of Buildings Data API
  description: Public API for EPB Data integrations
  contact:
    name: MHCLG Digital helpdesk (prefix email subject with "EPB")
    email: mhclg.digital-services@communities.gov.uk
  version: 0.0.1

servers:
  - url: 'https://api.epb-integration.digital.communities.gov.uk/api'
    description: Integration Service
  - url: 'https://api.epb-staging.digital.communities.gov.uk/api'
    description: Staging Service
  - url: 'https://api.epb.digital.communities.gov.uk/api'
    description: Production Service

tags:
  - name: Search
    description: Search the register given filtering data

paths:
  /api/certificate:
    get:
      tags:
        - Search
      summary: /api/certificate
      description: |-
        Fetch a certificate

      operationId: fetch-certificate
      security:
        - bearerToken: []

  /api/deltas:
    get:
      tags:
        - Search
      summary: /api/deltas
      description: |-
        /api/deltas
      operationId: delta-certificates
      security:
        - bearerToken: []

  /api/domestic/search:
    get:
      tags:
        - Search
      summary: Search for certificates
      description: |-
        Search EPCs by
          - date_start and date_end **mandatory**
          - multiple councils
          - multiple constituencies
          - a postcode
          - multiple efficiency rating (eff_rating)
          - a partial address
      operationId: search-assessments
      security:
        - bearerToken: []
      parameters:
        - in: query
          name: date_start
          description: The start date for the date range of the search (YY-mm-dd)
          required: true
          schema:
            type: string
            format: date
            example: '2017-01-10'
        - in: query
          name: date_end
          description: The end date for the date range of the search (YY-mm-dd)
          required: true
          schema:
            type: string
            format: date
            example: '2020-01-10'
        - in: query
          name: council
          description: The array of Local Authorities used for the search filter
          schema:
            type: array
            items:
              type: string
            example: ['Manchester', 'Birmingham']
        - in: query
          name: constituency
          description: The array of Parliamentary Constituencies used for the search filter
          schema:
            type: array
            items:
              type: string
            example: ['Aldershot', 'Banbury']
        - in: query
          name: postcode
          description: The postcode of the address being searched for
          schema:
            type: string
            example: 'FL23 4JA'
        - in: query
          name: eff_rating
          description: The array of Efficiency Ratings used for the search filter
          schema:
            type: array
            items:
              type: string
            example: ['A', 'B', 'C']
        - in: query
          name: address
          description: Partial address to be used for the search filter
          schema:
            type: string
          example: '9 new union'
        - in: query
          name: current_page
          description: The page number for search result pagination
          schema:
            type: integer
          example: 3
      responses:
        '200':
          description: Assessment search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnergyAssessmentSearchResult'
                  pagination:
                    $ref: '#/components/schemas/PaginationMetadata'
              example:
                data:
                  - addressLine1: "1 Some Street"
                    addressLine2: null
                    addressLine3: null
                    addressLine4: null
                    buildingReferenceNumber: "100121241798"
                    certificateNumber: "0000-0000-0000-0000"
                    constituency: "Chelsea and Fulham"
                    council: "Hammersmith and Fulham"
                    currentEnergyEfficiencyBand: "B"
                    postTown: "Whitbury"
                    postcode: "SW10 0AA"
                    registrationDate: "2020-05-04T00:00:00.000Z"
                pagination:
                  totalRecords: 4
                  currentPage: 1
                  totalPages: 1
                  nextPage: null
                  prevPage: null
        '400':
          description: Bad request - missing or malformed parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missing_dates:
                  summary: Missing or invalid dates
                  value:
                    error: "The search query was invalid - please provide a valid date range"
                includes_today:
                  summary: Date includes today
                  value:
                    error: "The search query was invalid - the date cannot include today"
                invalid_postcode:
                  summary: Invalid postcode
                  value:
                    error: "The search query was invalid - please prove a valid postcode"
                invalid_council:
                  summary: Invalid council
                  value:
                    error: "The search query was invalid - provide valid council name(s)"
                invalid_constituency:
                  summary: Invalid constituency
                  value:
                    error: "The search query was invalid - provide valid constituency name(s)"
        '404':
          description: No assessments found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "No domestic assessments could be found for that query"
        '416':
          description: Page out of range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "The requested page number 99 is out of range. Total pages: 12"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errors:
                  - code: "Unexpected error message here"

components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      description: This API uses Bearer Token

  schemas:

    EnergyAssessmentSearchResult:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: [string, "null"]
        addressLine3:
          type: [string, "null"]
        addressLine4:
          type: [string, "null"]
        buildingReferenceNumber:
          type: string
        certificateNumber:
          type: string
        constituency:
          type: string
        council:
          type: string
        currentEnergyEfficiencyBand:
          type: string
        postTown:
          type: string
        postcode:
          type: string
        registrationDate:
          type: string
          format: date-time

    PaginationMetadata:
      type: object
      properties:
        totalRecords:
          type: integer
        currentPage:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: [ integer, "null" ]
        prevPage:
          type: [ integer, "null" ]

    ErrorResponse:
      type: object
      oneOf:
        - required: [error]
          properties:
            error:
              type: string
        - required: [errors]
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string

  links: {}
  callbacks: {}















